name: Test dbt-projects-cli

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pytest.ini'
      - 'Pipfile'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pytest.ini'
      - 'Pipfile'
      - '.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pipenv
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-
    
    - name: Install dependencies
      run: |
        pipenv install --dev --python ${{ matrix.python-version }}
    
    - name: Install package in editable mode
      run: |
        pipenv run pip install -e .
    
    - name: Lint with flake8
      run: |
        make lint
      continue-on-error: true
    
    - name: Run unit tests
      run: |
        make test-unit
    
    - name: Run integration tests
      run: |
        make test-integration
    
    - name: Run all tests with coverage
      run: |
        make test-coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

